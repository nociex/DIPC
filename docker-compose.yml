services:
  # API Gateway Service
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "38100:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://dipc_user:dipc_password@dipc-db:5432/dipc
      - REDIS_URL=redis://dipc-redis:6379/0
      - CELERY_BROKER_URL=redis://dipc-redis:6379/0
      - CELERY_RESULT_BACKEND=redis://dipc-redis:6379/0
      - QDRANT_URL=http://dipc-qdrant:6333
    depends_on:
      - dipc-db
      - dipc-redis
      - dipc-qdrant
    volumes:
      - ./api:/app
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Workers
  worker:
    build:
      context: ./workers
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://dipc_user:dipc_password@dipc-db:5432/dipc
      - REDIS_URL=redis://dipc-redis:6379/0
      - CELERY_BROKER_URL=redis://dipc-redis:6379/0
      - CELERY_RESULT_BACKEND=redis://dipc-redis:6379/0
    depends_on:
      - dipc-db
      - dipc-redis
    volumes:
      - ./workers:/app
      - /tmp/dipc-processing:/tmp/processing
    deploy:
      replicas: 2
    command: celery -A src.celery_app worker --loglevel=info --concurrency=2

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "38110:3000"
    env_file:
      - .env
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:38100
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

  # PostgreSQL Database
  dipc-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=dipc
      - POSTGRES_USER=dipc_user
      - POSTGRES_PASSWORD=dipc_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  # Redis for Celery
  dipc-redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Qdrant Vector Database
  dipc-qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

volumes:
  postgres_data:
  redis_data:
  qdrant_data:

networks:
  default:
    name: dipc-network